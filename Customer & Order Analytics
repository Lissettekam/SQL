#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 
--#1 How many orders were placed in January? 
SELECT COUNT (orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--#2 How many of those orders were for an iPhone?--
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID';

--#3 Select the customer account numbers for all the orders that were placed in February.--
SELECT acctnum 
FROM BIT_DB.FebSales sales
INNER JOIN BIT_DB.customers customers
ON sales.orderID = customers.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--#4 Which product was the cheapest one sold in January, and what was the price?--
SELECT DISTINCT product, MIN(price)
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY price ASC 
LIMIT 1;

--#5 What is the total revenue for each product sold in January?--

SELECT SUM(quantity) * price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product;


--#6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?--

SELECT Product, SUM(Quantity), location,  
SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location =  '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--#7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?--

SELECT 
COUNT(distinct cust.acctnum), 
AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold. --

SELECT Product, SUM (Quantity), location
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? --

SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING COUNT(orderID) >= 3
ORDER BY COUNT(orderID);

--How many of each type of headphone were sold in February?--


SELECT Product, SUM(Quantity) AS Quantity
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
GROUP BY Product;

--What was the average amount spent per account in February?--

SELECT 
SUM(Quantity*price) / COUNT(cs.acctnum) 
FROM BIT_DB.FebSales AS fs
LEFT JOIN bit_db.customers AS cs
ON cs.order_id = fs.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--# OR # --

SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February? --


SELECT AVG(Quantity)
FROM BIT_DB.FebSales fs
LEFT JOIN BIT_DB.customers cs
ON fs.orderID = cs.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--or--

SELECT SUM(fs.Quantity)*1.0 / COUNT(DISTINCT cs.acctnum)*1.0
FROM BIT_DB.FebSales fs
LEFT JOIN BIT_DB.customers cs
ON fs.orderID = cs.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--OTHER STATS--

SELECT
AVG(fs.Quantity) AS avg_quantity
, SUM(fs.Quantity)/COUNT(cx.acctnum) AS sum_avg_quantity
, COUNT(DISTINCT cx.acctnum)
, COUNT(fs.Quantity)
, COUNT(cx.acctnum)
, SUM(fs.Quantity)
, SUM(fs.Quantity) * 1.0/COUNT(cx.acctnum)*1.0
FROM BIT_DB.FebSales fs
LEFT JOIN BIT_DB.customers cx
ON fs.orderID = cx.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?--

SELECT Product
, SUM(Quantity * price) AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY(Revenue)DESC LIMIT 1;
